func (connection *DefaultRabbitMQConnection) reconnect() {

	if !connection.rabbitmqContext.FailOver() {
		return
	}

	for {
		var ok bool
		var reason *amqp.Error
		if reason, ok = <-connection.notifyOnClosedConnection; !ok {
			break
		}
		log.Warn(fmt.Sprintf("rabbitmq connection - connection closed unexpectedly: %s", reason.Reason))

		time.Sleep(makeConnectionDelay)
		connection.Close()

		for {
			time.Sleep(makeConnectionDelay)
			if err := connection.connect(); err != nil {
				log.Error(fmt.Sprintf("rabbitmq connection - failed reconnection to %s: %s", connection.rabbitmqContext.Server(), err.Error()))
				continue
			}

			log.Info(fmt.Sprintf("rabbitmq connection - reconnected to %s", connection.rabbitmqContext.Server()))
			connection.rabbitmqContext.NotifyOnFaiOverConnection() <- fmt.Sprintf("reconnected to %s", connection.rabbitmqContext.Server())
			break
		}
	}
}
